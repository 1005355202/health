<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd">
    <!--1.配置匿名访问资源-->
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/pages/login*"/>
    <security:http security="none" pattern="/pages/index*"/>
    <security:http security="none" pattern="/pages/setmeal*"/>
    <security:http security="none" pattern="/pages/orderInfo*"/>
    <security:http security="none" pattern="/pages/orderSucc ess*"/>


    <!--2.配置认证后访问资源-->
    <security:http auto-config="true" use-expressions="true">

        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>

        <!--设置pages目录下,登录后可以访问-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>

        <!--设置登录页面-->
        <security:form-login login-page="/pages/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/logins.do"
                             default-target-url="/pages/index.html"
        always-use-default-target="false"
        authentication-failure-url="/pages/login.html"
        />

        <!--禁止csrf-->
        <security:csrf disabled="true"></security:csrf>
        <!--配置登出-->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
    </security:http>
    <security:authentication-manager>
<!--        &lt;!&ndash;配置认证提供者 ( 在提供者内 ,配置加密方式 ,是通过IOC容器内Bean名找到 ) &ndash;&gt;-->
        <security:authentication-provider user-service-ref="springSecurityService">
        <!--告诉框架 使用指定的加密方式-->
<!--            <security:password-encoder ref="passwordEncoder"/>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <!--3.1注册SpringSecurityService ( 自己写的实现UserDetailsService接口的类 ,认证管理器的提供者 ) -->
    <bean id="springSecurityService" class="com.itheima.controller.SpringSecurityUserService"></bean>
        <!--3.2注册BCryptPasswordEncoder ( 配置用来加密的Bean对象 , 所以其加密方式是 : BCryptPasswordEncoder ) -->
<!--<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>-->

    <!--4.开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled" />

</beans>